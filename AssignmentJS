var itemID="";


//////////////////////////////////////////// CREATE ///////////////////////////////////////////////////////////////////////////


// Get calculated age
    function calculateAge(){
        var dob = new Date($('#sdob').val()) ;
        var now = new Date();
        var age = now.getFullYear() - dob.getFullYear() ;
        var monthDiff = now.getMonth() - dob.getMonth();
        
        if (monthDiff < 0 || (monthDiff === 0 && now.getDate() < dob.getDate())){
            age--;
        }
    $('#age').val(age>0 ? age : 0);
     }
  
 // Get State and Country from City
    function fillStateAndCountry(){
        let city = $('#city').val();
       
        let state, country;

        if(city == "1") {
            state="Ara";
            country="India";
        }
        else if(city == "2" ){
             state="Bilaspur";
            country="India";

        }
        else if(city == "3" ){
              state="New Delhi";
            country="India";
        }
        else if(city == "4" ){
             state="Panji";
            country="India";

        }
        $('#state').val(state);
        $('#country').val(country);
       
    }

     
 

//var itemId="";
function Create() {
  
   
    debugger;
    var url = _spPageContextInfo.siteAbsoluteUrl;
    var listName = $('#listName').val();
    var title = $('#sName').val();
    var dob=formatUTCDates($('#sdob').val());
    var doj=formatUTCDates($('#sdoj').val());
    
    var city=$('#city').val();
    
   var department=$('#department').val();

// Get mutilple checkbox value
    var skills = [];
    var checkboxes = document.querySelectorAll('input[type="checkbox"]:checked');
    checkboxes.forEach(function(checkbox) {
        skills.push(checkbox.value);
    });



   
   
    
    createListItemWithDetails(listName, url, title,dob,doj,skills,city,department, function (data){
         var age = calculateAge(dob);
            $('#sage').val(age);
        alert("Item has been created. Updating available items");
        
       
    }, function (data) {
        console.log(JSON.stringify(data));
        alert("Ooops, an error occured. Please try again");
    });
 }

function createListItemWithDetails(listName, url, title,dob,doj,skills,city,department,success, failure) {

    var itemType = GetItemTypeForListName(listName);

    var item = {
        "__metadata": { "type": itemType },
        "Title": title,
        "DOB":dob,
        "DOJ":doj,
        "Skill": { "results": skills},
         "CityId": city,
         "DepartmentId":department
       
        
    };
    var listUrl=url + "/_api/web/lists/getbytitle('" + listName + "')/items"

    $.ajax({
        url: listUrl,
        type: "POST",
        contentType: "application/json;odata=verbose",
        data: JSON.stringify(item),
        headers: {
            "Accept": "application/json;odata=verbose",
            "X-RequestDigest": getFormDigest()
        },
        success: function (data) {
            success(data);
            Clear();
            
        },
        error: function (data) {
            failure(data);
        }
    });
}

function getFormDigest() {
    var fd="";
    $.ajax({
        url: _spPageContextInfo.siteAbsoluteUrl + "/_api/contextinfo",
        method: "POST",
        async: false,
        headers: { "Accept": "application/json; odata=verbose" },
        success: function(data){
           fd= data.d.GetContextWebInformation.FormDigestValue;
        }
    });   
    return fd;
}


function GetItemTypeForListName(name) {
    name=name.trim();
    // inSpc= name.indexOf(" ");
    // name= name.slice(0,inSpc)+name.slice(inSpc+1);
    return "SP.Data." + name.charAt(0).toUpperCase() + name.slice(1) + "ListItem";   
}


///////////////////////////// CREATE END ////////////////////////////////////////////////////////////////////////////////////////


function formatUTCDates(dateString) {
    if (!dateString) return ""; 
    var date = new Date(dateString);
    var year = date.getFullYear();
    var month = ('0' + (date.getMonth() + 1)).slice(-2);
    var day = ('0' + date.getDate()).slice(-2);
    return year + '-' + month + '-' + day;
}


function Clear(){
     $('#sName').val("");
     $('#sdob').val("");
     $('#sdoj').val("");
     $('#department').val("");
     $('#city').val("");
     $('#sdoj').val("");
     $("input[name='checkbox']").prop("checked", false); // Uncheck all checkboxes after creation

}


///////////////////////////////////// READ ///////////////////////////////////////////////////////////////////////////////////////////////


function Read(){   
  
var empty="";
    $.ajax({
        url:  _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('Employee')/items?$select=ID, Title,DOB,Age,DOJ,Skill,Department/Title,Attachments,City/Title,City/State,City/Country,User,Manager/Title,User/Title,User/EMail&$expand=City,User,Manager,Department",
        method: "GET",
        headers: { "Accept": "application/json;odata=verbose"},
        success: function (data) {
            var items = data.d.results;
              
             for (var i = 0; i < items.length; i++) {
                 itemID=items[i].ID;
 empty+= "<tr><td style='display: none;'>" + items[i].Id + "</td><td> "+ items[i].Title + "</td><td>" + formatDate(items[i].DOB )+ "</td><td>" + items[i].Age +"</td><td>" + formatDate(items[i].DOJ )+"</td><td>"+(items[i].User ? items[i].User.Title : "")+"</td><td>"+items[i].Manager.Title+"</td><td>"+items[i].Skill.results.toString()+"</td><td>"+items[i].City.Title + "</td><td>" +items[i].City.State+ "</td><td>" +items[i].City.Country +"</td><td>"+items[i].Department.Title+"</td><td>"+items[i].Attachments+"</td><td>"+"<input type='button' value='Edit' onclick='edit(this)'>"+ "</td><td>"+"<input type='button' value='Delete' onclick='deleteItem("+items[i].Id+")'></td></tr>";
                    }
                    $("#tblEmployee tbody").html(empty);
                },
        
        error: function (data) {
            alert(JSON.stringify(data));
        }
    });

  }

  
    function formatDate(dateString) {
        if (!dateString) return "";
        var date = new Date(dateString);
        var formattedDate = (date.getDate() + '/' + (Number(date.getMonth()) + 1) + '/' + date.getFullYear());
        return formattedDate;
    }


////////////////////////// READ END ///////////////////////////////////////////////////////////////////////////////








///////////////// EDIT ////////////////////////////////////////////////////////////////////////////////////
// function edit(evt) {   
//     debugger;
  
//     var editListIds=$(evt.parentNode.parentNode).find("td")[0].innerHTML;
//     $.ajax({
//         url:  _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('Employee')/items("+ editListIds +" )?$select=ID,Title,DOB,Age,DOJ,Skill,Department/ID,Department/Title,Attachments,City/ID,City/Title,City/State,City/Country,User,Manager/Title,User/Title,User/EMail&$expand=City,User,Manager,Department",
//         method: "GET",
//         headers: { "Accept": "application/json;odata=verbose"} ,
//         success: function (data){
//             var item = data.d;
//             var itemData="";

//             // Populate the retrieved data into the appropriate form fields
//             $('#sName').val(item.Title);
//             $('#sdob').val(formatUTCDates(item.DOB)); // Format DOB
//              $('#age').val(item.Age);
//             $('#sdoj').val(formatUTCDates(item.DOJ)); // Format DOJ

//             // Populate skills checkboxes based on the retrieved data
           
//             //  var skills = item.Skill.results;
//             // $("input[type='checkbox']").prop("checked", false); // uncheck all checkboxes first
//             // skills.forEach(function(skill) {
//             //     $("input[type='checkbox'][value='" + skill + "']").prop("checked", true);
//             // });

//              var skills = item.Skill.results;
//             $("input[type='checkbox']").prop("checked", false); // uncheck all checkboxes first
//             skills.forEach(function(skill) {
//                 $("input[type='checkbox'][value='" + skill + "']").prop("checked", true);
//             });

//             // Set the selected city in the dropdown
//             $('#city').val(item.City.ID);
//             $('#state').val(item.City.State);
//               $('#country').val(item.City.Country);
//             // $('#city').val(item.City.Title); 


//             // Set the selected department in the dropdown
//            $('#department').val(item.Department.ID);
//             // $('#department').val(item.Department.Title);
//         },
//         error: function (data){
//             alert(JSON.stringify(data));
//         }
//     });
// }


function edit(evt) {   
    debugger;
  
    var editListIds = $(evt.parentNode.parentNode).find("td")[0].innerHTML;
    itemID = editListIds; // Assigning the itemID value to the global variable
    $.ajax({
        url:  _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('Employee')/items("+ editListIds +" )?$select=ID,Title,DOB,Age,DOJ,Skill,Department/ID,Department/Title,Attachments,City/ID,City/Title,City/State,City/Country,User,Manager/Title,User/Title,User/EMail&$expand=City,User,Manager,Department",
        method: "GET",
        headers: { "Accept": "application/json;odata=verbose"} ,
        success: function (data){
            var item = data.d;
            var itemData="";

            // Populate the retrieved data into the appropriate form fields
            $('#sName').val(item.Title);
            $('#sdob').val(formatUTCDates(item.DOB)); // Format DOB
             $('#age').val(item.Age);
            $('#sdoj').val(formatUTCDates(item.DOJ)); // Format DOJ

            // Populate skills checkboxes based on the retrieved data
           
            //  var skills = item.Skill.results;
            // $("input[type='checkbox']").prop("checked", false); // uncheck all checkboxes first
            // skills.forEach(function(skill) {
            //     $("input[type='checkbox'][value='" + skill + "']").prop("checked", true);
            // });

             var skills = item.Skill.results;
            $("input[type='checkbox']").prop("checked", false); // uncheck all checkboxes first
            skills.forEach(function(skill) {
                $("input[type='checkbox'][value='" + skill + "']").prop("checked", true);
            });

            // Set the selected city in the dropdown
            $('#city').val(item.City.ID);
            $('#state').val(item.City.State);
              $('#country').val(item.City.Country);
            // $('#city').val(item.City.Title); 


            // Set the selected department in the dropdown
           $('#department').val(item.Department.ID);
            // $('#department').val(item.Department.Title);
        },
        error: function (data){
            alert(JSON.stringify(data));
        }
    });
}


  ////////////////////////////// EDIT END ///////////////////////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////// UPDATE /////////////////////////////////////////////////////////////////////////////////


  function updateOnEdit() {
      debugger;
    var title = $('#sName').val();
    var dob = $('#sdob').val();
    var age = $('#age').val();
    var doj = $('#sdoj').val();
    var cityId = $('#city').val(); // Assuming city is a lookup column
    var state = $('#state').val();
    var country = $('#country').val();
    var departmentId = $('#department').val(); // Assuming department is a lookup column
    var skills = [];
    $('input[type="checkbox"]:checked').each(function() {
        skills.push($(this).val());
    });

    var siteUrl = _spPageContextInfo.siteAbsoluteUrl;
// Enter your site URL
    var listName = "Employee"; // Enter your list name

    updateListItem(itemID, listName, siteUrl, title, dob, age, doj, cityId,state, country, departmentId, skills, 
        function(){
            alert("Item updated successfully");
            // Optionally, you can perform additional actions after successful update
            // For example, refreshing the list
            Read();
        },
        function() {
            alert("Error updating item") ;
     }
    );
 }
function updateListItem(itemID, listName, siteUrl, title, dob, age, doj, cityId, state, country, departmentId, skills, success, error) {
    var itemUrl = siteUrl + "/_api/web/lists/getbytitle('" + listName + "')/items(" + itemID + ")";
     itemData = {
        "__metadata": { "type": GetItemTypeForListName(listName) },
        "Title": title,
        "DOB": dob,
        "Age": age,
        "DOJ": doj,
        "CityId": cityId,
        "DepartmentId": departmentId,
        "Skill": { "results": skills} ,
        "City:State": state,
        "City:Country": country
    };

    $.ajax({
        url: itemUrl,
        type: "POST", // Change POST to PATCH
        contentType: "application/json;odata=verbose",
        data: JSON.stringify(itemData),
        headers: {
            "Accept": "application/json;odata=verbose",
            "X-HTTP-Method": "MERGE", // Remove this header
            "IF-MATCH": "*", // Remove this header
            "X-RequestDigest": getFormDigest()
        },
        success: function(data) {
            success(data);
        },
        error: function(data) {
            error(data);
            console.log(data);
        }
    });
}

//////////////////////////////////// UPDATE END //////////////////////////////////////////////////////////////////////////////////////////////




////////////////////////////       DELETE ////////////////////////////////////////////////////////////
function deleteItem(itemID){
    var siteUrl = _spPageContextInfo.siteAbsoluteUrl;

    // Display confirmation dialog
    var confirmation = confirm("Are you sure you want to delete this item?");
    if (confirmation){
        // Make the DELETE request
        $.ajax({
            url: siteUrl + "/_api/web/lists/getbytitle('Employee')/items(" + itemID + ")",
            type: "POST",
            headers: {
                "X-RequestDigest": getFormDigest(),
                "IF-MATCH": "*",
                "X-HTTP-Method": "DELETE"
             },
            success: function (data) {
               alert("Item deleted successfully");
                // Refresh items after deletion
                Read();
            },
            error: function (error) {
                console.log("Error deleting item: " + JSON.stringify(error));
            }
        });
    } else {
        alert("Deletion cancelled."); // Optional: Log cancellation
    }
}
/////////////////////////// DELETE END //////////////////////////////////////////////////////////////////////////////////////




//   function formatUTCDates(dateString){
//     if (!dateString) return ""; 
//     var date = new Date(dateString);
  
//    // var formattedDate = (Number(date.getMonth())+1) + '/' +date.getDate()+ '/' + date.getFullYear();
//     var formattedDate = (date.getFullYear() + '-' +(Number(date.getMonth())+1) + '-' +date.getDate()+"T00:00:00z") ;   
//     return formattedDate;
// }

  
    function formatDate(dateString) {
        if (!dateString) return "";
        var date = new Date(dateString);
        var formattedDate = (date.getDate() + '/' + (Number(date.getMonth()) + 1) + '/' + date.getFullYear());
        return formattedDate;
    }






























// var itemIds="";
// var status ="";

// function Create() {
//     debugger;
//     var url = _spPageContextInfo.siteAbsoluteUrl;
//     var listName = $('#listName').val();
//     var name = $('#sName').val();
//     var dob = formatUTCDates($('#sdob').val());
//     var doj = formatUTCDates($('#sdoj').val());
//     var checkSkill = [];
//     if($("#java").is(":checked")){
//         checkSkill.push($("#java").val());
//     }
//      if($("#html").is(":checked")){
//         checkSkill.push($("#html").val());
//     }
//      if($("#Javascript").is(":checked")){
//         checkSkill.push($("#Javascript").val());
//     }
//      if($("#sharepoint").is(":checked")){
//         checkSkill.push($("#sharepoint").val());
//     }
//     if($("#sql").is(":checked")){
//         checkSkill.push($("#sql").val());
//     }
//      if($("#css").is(":checked")){
//         checkSkill.push($("#css").val());
//     }
   
//    var skills= {"__metadata":{"type":"Collection(Edm.String)"},"results":
//    [check.join(',')]};
   
//     if(status==""){
//     createListItemWithDetails(listName, url, name,dob,doj,checkSkill, function (data) {
//         alert("Item has been created. Updating available items");
       
//         $('#sName').val("");
//          $('#sdob').val("");
//          $('#sdoj').val("");
//          Read();
//     }, function (data) {
//         console.log(JSON.stringify(data));
//         alert("Ooops, an error occured. Please try again");
        
//     });
//     }

//     else{
//          updateListItem(itemIds, listName, url, name,dob,doj, function() {
//     alert("Item updated, refreshing available items");
//     status="";
//            $('#sName').val("");
//       $('#sdob').val("");
//         $('#sdoj').val("");
//         Read();
        
//     },
//     function(){
//         alert("Oops,an error occured, Please try again");
//     });
//     }
// }

// function createListItemWithDetails(listName, url,name,dob,doj,success, failure) {

//     var itemType = GetItemTypeForListName(listName);
//     var item = {
//         "__metadata": { "type": itemType },
//         "Title": name,
//         "DOB": dob,
//         "DOJ":doj
        
//     };
//     var listUrl=url + "/_api/web/lists/getbytitle('" + listName + "')/items"

//     $.ajax({
//         url: listUrl,
//         type: "POST",
//         contentType: "application/json;odata=verbose",
//         data: JSON.stringify(item),
//         headers: {
//             "Accept": "application/json;odata=verbose",
//             "X-RequestDigest": getFormDigest()
//         },
//         success: function (data) {
//             success(data);
//         },
//         error: function (data) {
//             failure(data);
//         }
//     });
// }

// function getFormDigest() {
//     var fd="";
//     $.ajax({
//         url: _spPageContextInfo.siteAbsoluteUrl + "/_api/contextinfo",
//         method: "POST",
//         async: false,
//         headers: { "Accept": "application/json; odata=verbose" },
//         success: function(data){
//            fd= data.d.GetContextWebInformation.FormDigestValue;
//         }
//     });   
//     return fd;
// }


// function GetItemTypeForListName(name) {
//     name=name.trim() ;
//     // inSpc= name.indexOf(" ");
//     // name= name.slice(0,inSpc)+name.slice(inSpc+1);
//     return "SP.Data." + name.charAt(0).toUpperCase() + name.slice(1) + "ListItem";   
// }





// function Read(){   
  
// var empty="";
//     $.ajax({
//         url:  _spPageContextInfo.siteAbsoluteUrl + "/_api/web/lists/getbytitle('Employee')/items?$select= Title,DOB,Age,DOJ,Skill,Department/Title,Attachments,City/Title,City/State,City/Country,User,Manager/Title,User/Title,User/EMail&$expand=City,User,Manager,Department",
//         method: "GET",
//         headers: { "Accept": "application/json;odata=verbose"},
//         success: function (data) {
//             var items = data.d.results;
              
//              for (var i = 0; i < items.length; i++){
//  empty+= "<tr><td style='display:none'>" + items[i].ID + "</td><td>" + items[i].Title + "</td><td>" + formatDate(items[i].DOB )+ "</td><td>" + items[i].Age +"</td><td>" + formatDate(items[i].DOJ )+"</td><td>"+(items[i].User ? items[i].User.Title : "")+"</td><td>"+items[i].Manager.Title+"</td><td>"+items[i].Skill.results.toString()+"</td><td>"+items[i].City.Title + "</td><td>" +items[i].City.State+ "</td><td>" +items[i].City.Country +"</td><td>"+items[i].Department.Title+"</td><td>"+items[i].Attachments+"</td><td>"+"<input type='button' value='Edit' onclick='editData(this)'>"+ "</td><td>"+"<input type='button' value='Delete' onclick='DeleteData(this)'>"+ "</td></tr>";
//                     }
//                     $("#tblEmployee tbody").html(empty);
//                 },
        
//         error: function (data) {
//             alert(JSON.stringify(data));
//         }
//     });

//   }











//     function formatDate(dateString) {
//         if (!dateString) return "";
//         var date = new Date(dateString);
//         var formattedDate = (date.getDate() + '/' + (Number(date.getMonth()) + 1) + '/' + date.getFullYear());
//         return formattedDate;
//     }


//     function editData(evt) {
//     debugger;
//         status= evt.ELEMENT_NODE;
    
//     itemIds = $(evt.parentNode.parentNode).find("td")[0].innerHTML;
   

//     $('#sName').val($(evt.parentNode.parentNode).find("td")[1].innerHTML);
//    $('#sdob').val($(evt.parentNode.parentNode).find("td")[2].innerHTML);
//     $('#sdoj').val($(evt.parentNode.parentNode).find("td")[3].innerHTML);
  
// }






//  function updateListItem(itemId, listName, siteUrl, name,dob,doj, success, error) {
//      debugger;
//     var itemUrl = siteUrl + "/_api/web/lists/getbytitle('" + listName + "')/items(" + itemId + ")";
    
//     var itemData = {
//         __metadata: { 'type': 'SP.Data.' + listName + 'ListItem' },
//         Title: name,
//         DOB: dob,
//         DOJ: doj
        
//     };
    
//     $.ajax({
//         url: itemUrl,
//         type: "POST",
//         contentType: "application/json;odata=verbose",
//         data: JSON.stringify(itemData),
//         headers: {
//             "Accept": "application/json;odata=verbose",
//             "X-HTTP-Method": "MERGE",
//             "IF-MATCH": "*",
//             "X-RequestDigest":getFormDigest()
//         },
//         success: function (data) {
//             success();
//         },
//         error: function (data) {
//             error();
//             console.log(data);
//         }
//     });
// }


// function getListItemWithId(itemId, listName, siteurl, success, failure) {
//     var url = siteurl + "/_api/web/lists/getbytitle('" + listName + "')/items?$filter=Id eq " + itemId;
//     $.ajax({
//         url: url,
//         method: "GET",
//         headers: { "Accept": "application/json; odata=verbose" },
//         success: function (data) {
//             if (data.d.results.length == 1) {
//                 success(data.d.results[0]);
//             }
//             else {
//                 failure("Multiple results obtained for the specified Id value");
//             }
//         },
//         error: function (data) {
//             failure(data);
//         }
//     });
// }



// function formatUTCDates(dateString){
//     if (!dateString) return ""; 
//     var date = new Date(dateString);
  
//    // var formattedDate = (Number(date.getMonth())+1) + '/' +date.getDate()+ '/' + date.getFullYear();
//     var formattedDate = (date.getFullYear() + '-' +(Number(date.getMonth())+1) + '-' +date.getDate()+"T00:00:00z") ;   
//     return formattedDate;
// }
 


//  function DeleteData(evt) {
//     debugger;
//     alert("Ankit");
//     var url = _spPageContextInfo.siteAbsoluteUrl;
//     var listName = $('#listName').val(); // Assuming you have a variable named listName

//     // Retrieve the selected item ID
//     var itemId = $('#DeleteItems').val();

//     // Get the request digest value from the page
//     var requestDigest = $('#__REQUESTDIGEST').val();

//     // Construct the URL for deleting the item
//     var itemUrl = url + "/_api/web/lists/getbytitle('" + listName + "')/items(" + itemIds + ")";

//     // Make an AJAX call to delete the item
//     $.ajax({
//         url: itemUrl,
//         type: "POST",
//         contentType: "application/json;odata=verbose",
//         headers: {
//             "Accept": "application/json;odata=verbose",
//             "X-HTTP-Method": "DELETE",
//             "IF-MATCH": "*",
//             "X-RequestDigest": getFormDigests() // Corrected function name
//         },
//         success: function (data) {
//             // Item deleted successfully, perform any additional actions if needed
//             alert("Item deleted successfully");
//             // Optionally, refresh the list or perform any other actions after deletion
//             // For example, you may call a function to refresh the list items
//             RefreshItemList();
//         },
//         error: function (error) {
//             // Error occurred during deletion, handle the error
//             alert("Error deleting item");
//             console.log(JSON.stringify(error));
//         }
//     });
// }


